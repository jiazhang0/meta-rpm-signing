From 4636177ade63457ae4ab16d24895e1d8be5ef397 Mon Sep 17 00:00:00 2001
From: jbj <jbj>
Date: Thu, 8 May 2014 23:01:11 +0000
Subject: [PATCH 34/46] - ssl: calculate ecdsa public key length with rounding.

Signed-off-by: Mark Hatle <mark.hatle@windriver.com>
Signed-off-by: Randy MacLeod <Randy.MacLeod@windriver.com>
---
 rpmio/rpmssl.c | 10 ++++++----
 1 file changed, 6 insertions(+), 4 deletions(-)

diff --git a/rpmio/rpmssl.c b/rpmio/rpmssl.c
index b348e50..b0f9e25 100644
--- a/rpmio/rpmssl.c
+++ b/rpmio/rpmssl.c
@@ -531,7 +531,7 @@ assert(ssl->nbits);
 	    else if (!strcasecmp(dig->hash_algoN, "SHA384"))
 		ssl->nbits = 384;
 	    else if (!strcasecmp(dig->hash_algoN, "SHA512"))
-		ssl->nbits = 512;
+		ssl->nbits = 521;
 	    else
 		ssl->nbits = 256;	/* XXX default */
 	}
@@ -770,7 +770,7 @@ assert(mbits == ssl->qbits);
 	    ssl->nbits = 384;
 	    break;
 	case NID_secp521r1:
-	    ssl->nbits = 512;
+	    ssl->nbits = 521;
 	    break;
 	}
     }
@@ -780,12 +780,14 @@ fprintf(stderr, "      OID[%4u]: %s\n", 8*nb, pgpHexStr(p, nb));
 #endif	/* !OPENSSL_NO_ECDSA */
 	break;
     case 61:		/* ECDSA Q */
+        mbits = ssl->nbits;
+        nb = 2 * (mbits+7)/8 + 1 + 2;
 #if !defined(OPENSSL_NO_ECDSA)
 assert(ssl->nid);
       {	EC_KEY * ec = EC_KEY_new_by_curve_name(ssl->nid);
 	const unsigned char *q = p+2;
 
-	ec = o2i_ECPublicKey(&ec, &q, ssl->nbits/4+1);
+	ec = o2i_ECPublicKey(&ec, &q, nb-2);
 
 if (ssl->pkey) {
     if (ssl->pkey)
@@ -797,7 +799,7 @@ assert(ssl->pkey == NULL);
 	xx = EVP_PKEY_assign_EC_KEY(ssl->pkey, ec);
 assert(xx);
 #else
-fprintf(stderr, "        Q[%4u]: %s\n", ssl->nbits/4+1, pgpHexStr(p+2, ssl->nbits/4+1));
+fprintf(stderr, "        Q[%4u]: %s\n", 8*(nb-2), pgpHexStr(p+2, nb-2));
 #endif	/* !OPENSSL_NO_ECDSA */
       }	break;
     }
-- 
2.0.1

